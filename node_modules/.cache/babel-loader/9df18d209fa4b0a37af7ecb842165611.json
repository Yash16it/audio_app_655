{"ast":null,"code":"var _jsxFileName = \"/Users/yashchaudhary/Desktop/React App/my-test-app/src/App.js\";\nimport React, { useState } from 'react';\nimport Playlist from './Playlist';\nimport logo from './GreenGuitarLogo.png';\nimport './App.css';\nimport ShuffleButton from './ShuffleButton';\nimport PlayPauseButton from './PlayPauseButton';\nimport PrevButton from './PrevButton';\nimport NextButton from './NextButton';\nimport Status from './Status';\nimport audioData from './audio_tracks.json';\nimport './style.css';\nconst App = () => {\n  const [initialPlaylistData] = useState(audioData.tracks);\n  const [playlistData, setPlaylistData] = useState(initialPlaylistData);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [statusText, setStatusText] = useState('');\n  const handleShuffle = () => {\n    const shuffledPlaylist = [...initialPlaylistData];\n    for (let i = shuffledPlaylist.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledPlaylist[i], shuffledPlaylist[j]] = [shuffledPlaylist[j], shuffledPlaylist[i]];\n    }\n    setPlaylistData(shuffledPlaylist);\n    if (isPlaying) {\n      setStatusText(`Playing: ${shuffledPlaylist[currentTrackIndex].title}`);\n    }\n  };\n  const handlePrev = () => {\n    const previousIndex = (currentTrackIndex - 1 + playlistData.length) % playlistData.length;\n    const prevTrack = playlistData[previousIndex];\n    if (prevTrack.title) {\n      setStatusText(`Playing: ${prevTrack.title}`);\n    } else if (prevTrack.episodeTitle) {\n      const displayTitle = prevTrack.podcast ? `${prevTrack.podcast}: ${prevTrack.episodeTitle}` : prevTrack.episodeTitle;\n      setStatusText(`Playing: ${displayTitle}`);\n    }\n    setIsPlaying(false);\n    setCurrentTrackIndex(previousIndex);\n  };\n  const handlePlayPause = () => {\n    setIsPlaying(prevIsPlaying => !prevIsPlaying);\n    if (!isPlaying) {\n      setStatusText(`Playing: ${playlistData[currentTrackIndex].title}`);\n    } else {\n      setStatusText('Paused');\n    }\n  };\n  const handleNext = () => {\n    const nextIndex = (currentTrackIndex + 1) % playlistData.length;\n    const nextTrack = playlistData[nextIndex];\n    if (nextTrack.title) {\n      setStatusText(`Playing: ${nextTrack.title}`);\n    } else if (nextTrack.episodeTitle) {\n      const displayTitle = nextTrack.podcast ? `${nextTrack.podcast}: ${nextTrack.episodeTitle}` : nextTrack.episodeTitle;\n      setStatusText(`Playing: ${displayTitle}`);\n    }\n    setIsPlaying(false);\n    setCurrentTrackIndex(nextIndex);\n  };\n  const handleAudioDoubleClick = audioItem => {\n    if (audioItem.title) {\n      setStatusText(`Playing: ${audioItem.title}`);\n    } else if (audioItem.episodeTitle) {\n      const displayTitle = audioItem.podcast ? `${audioItem.podcast}: ${audioItem.episodeTitle}` : audioItem.episodeTitle;\n      setStatusText(`Playing: ${displayTitle}`);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Drexel Music\"), /*#__PURE__*/React.createElement(Status, {\n    statusText: statusText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ShuffleButton, {\n    onClick: handleShuffle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PrevButton, {\n    onClick: handlePrev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PlayPauseButton, {\n    isPlaying: isPlaying,\n    onClick: handlePlayPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(NextButton, {\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Playlist, {\n    playlistData: playlistData,\n    onAudioDoubleClick: handleAudioDoubleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n};\nexport default App;","map":{"version":3,"names":["React","useState","Playlist","logo","ShuffleButton","PlayPauseButton","PrevButton","NextButton","Status","audioData","App","initialPlaylistData","tracks","playlistData","setPlaylistData","isPlaying","setIsPlaying","currentTrackIndex","setCurrentTrackIndex","statusText","setStatusText","handleShuffle","shuffledPlaylist","i","length","j","Math","floor","random","title","handlePrev","previousIndex","prevTrack","episodeTitle","displayTitle","podcast","handlePlayPause","prevIsPlaying","handleNext","nextIndex","nextTrack","handleAudioDoubleClick","audioItem","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","onAudioDoubleClick"],"sources":["/Users/yashchaudhary/Desktop/React App/my-test-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Playlist from './Playlist';\nimport logo from './GreenGuitarLogo.png';\nimport './App.css';\nimport ShuffleButton from './ShuffleButton';\nimport PlayPauseButton from './PlayPauseButton';\nimport PrevButton from './PrevButton';\nimport NextButton from './NextButton';\nimport Status from './Status';\nimport audioData from './audio_tracks.json';\nimport './style.css';\n\nconst App = () => {\n  const [initialPlaylistData] = useState(audioData.tracks);\n  const [playlistData, setPlaylistData] = useState(initialPlaylistData);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [statusText, setStatusText] = useState('');\n\n  const handleShuffle = () => {\n    const shuffledPlaylist = [...initialPlaylistData];\n    for (let i = shuffledPlaylist.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledPlaylist[i], shuffledPlaylist[j]] = [shuffledPlaylist[j], shuffledPlaylist[i]];\n    }\n    setPlaylistData(shuffledPlaylist);\n    if (isPlaying) {\n      setStatusText(`Playing: ${shuffledPlaylist[currentTrackIndex].title}`);\n    }\n  };\n\n  const handlePrev = () => {\n    const previousIndex = (currentTrackIndex - 1 + playlistData.length) % playlistData.length;\n    const prevTrack = playlistData[previousIndex];\n    \n    if (prevTrack.title) {\n      setStatusText(`Playing: ${prevTrack.title}`);\n    } else if (prevTrack.episodeTitle) {\n      const displayTitle = prevTrack.podcast ? `${prevTrack.podcast}: ${prevTrack.episodeTitle}` : prevTrack.episodeTitle;\n      setStatusText(`Playing: ${displayTitle}`);\n    }\n  \n    setIsPlaying(false);\n    setCurrentTrackIndex(previousIndex);\n  };\n  \n  const handlePlayPause = () => {\n    setIsPlaying((prevIsPlaying) => !prevIsPlaying);\n    if (!isPlaying) {\n      setStatusText(`Playing: ${playlistData[currentTrackIndex].title}`);\n    } else {\n      setStatusText('Paused');\n    }\n  };\n\n  const handleNext = () => {\n    const nextIndex = (currentTrackIndex + 1) % playlistData.length;\n    const nextTrack = playlistData[nextIndex];\n  \n    if (nextTrack.title) {\n      setStatusText(`Playing: ${nextTrack.title}`);\n    } else if (nextTrack.episodeTitle) {\n      const displayTitle = nextTrack.podcast ? `${nextTrack.podcast}: ${nextTrack.episodeTitle}` : nextTrack.episodeTitle;\n      setStatusText(`Playing: ${displayTitle}`);\n    }\n  \n    setIsPlaying(false);\n    setCurrentTrackIndex(nextIndex);\n  };\n\n  const handleAudioDoubleClick = (audioItem) => {\n    if (audioItem.title) {\n      setStatusText(`Playing: ${audioItem.title}`);\n    } else if (audioItem.episodeTitle) {\n      const displayTitle = audioItem.podcast ? `${audioItem.podcast}: ${audioItem.episodeTitle}` : audioItem.episodeTitle;\n      setStatusText(`Playing: ${displayTitle}`);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <img className=\"logo\" src={logo} alt=\"Logo\" />\n      <h1 className=\"header\">Drexel Music</h1>\n      <Status statusText={statusText} />\n      <div className=\"controls\">\n        <ShuffleButton onClick={handleShuffle} />\n        <PrevButton onClick={handlePrev} />\n        <PlayPauseButton isPlaying={isPlaying} onClick={handlePlayPause} />\n        <NextButton onClick={handleNext} />\n      </div>\n      \n      <Playlist\n        playlistData={playlistData}\n        onAudioDoubleClick={handleAudioDoubleClick}\n      />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}